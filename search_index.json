[["index.html", "METODOLOGÍA DE CÁLCULO Indicador de Bienestar Territorial Capítulo 1 Descripción General", " METODOLOGÍA DE CÁLCULO Indicador de Bienestar Territorial Centro de Inteligencia Territorial - UAI 2022-02-21 Capítulo 1 Descripción General "],["intro.html", "Capítulo 2 Introduction", " Capítulo 2 Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 2. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 2.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 2.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 2.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 2.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2021) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],["github.html", "Capítulo 3 Gihub 3.1 Tutorial multiples cuentas github", " Capítulo 3 Gihub 3.1 Tutorial multiples cuentas github Autor: Denis Berroeta Fecha: 04-02-2022 La presente página tiene como objetivo orientar respecto a como trabajar con multiples cuentas github, a raíz de la iniciativa de crear un \"organización\" en github, para el trabajo colaborativo pero con cuentas creadas con el correo institucional del Universidad. El presente procedimiento esta orientado a ususarios git desde la terminal Crear la cuenta github con correo institucional Ir a https://github.com y presionar “Sign Up” y continuar con el proceso de logearse pero con el correo institucional. GitHub: Where the world builds software Untitled Crear una SSH Key Para este paso se utiliza la referencia oficial sobre la generación de SSH Keys de la documentición oficial de Github. Desde la Terminal escribir el siguiente comando reemplazando correo institucional: ssh-keygen -t ed25519 -C &quot;*your_email@example.com*&quot; Lo anterior crea una nueva SSh key para el correo instucional, que son dos una pública y optra privada Posteriormente pregunta la ubicación donde se almacenará las keys, se recomienda en la carpeta oculta de .ssh (/Users/you/.ssh), si presionas enter la agrega en la ubucación actual. Enter a file in which to save the key (/Users/*you*/.ssh/id_*algorithm*): *[Press enter]* Finalmente pregunta por una frase de seguraidad (también se puede presionar enter y saltarse ese paso). &gt; Enter passphrase (empty for no passphrase):[Type a passphrase] &gt; Enter same passphrase again:[Type passphrase again] Si se hicieron bien los paso anteriores se tienen que haber creado las dos credenciales, como se ve en la figura se crean por pares. Untitled Agregar Key Publica a la cuenta Dirigirse https://github.com logearse con la cuenta institucional, irse a \"setting\" (hacer click sobre tu imagen avatar, derecha abajo) Untitled irse a “SSH and GPG keys”, y hacer click sobre el botón “New SSh key”. Se abrirá el siguiente cuadros de textos para rellenar, el primero “Title” que corresponde al nombre que tendrá la key (puede ser cualquiera, que identifique el pc donde creaste las keys de la etapa anterior). En el cuandro de texto “Key” que corresponde al lugar donde se pegará el texto de la key publica creada en la etapa anterior (file.pub). Untitled Untitled Agregar cuentas gitgub al alrchivo de configuración SSH Se creará un archivo donde se almacenará la configuración de las cuentas creadas. Generalemente existe un archivo llamado “config” en la ruta “~/.ssh/config” en caso que no existe se debe crear: touch ~/.ssh/config Para luego editar con cualquier editor de texto (ej:vim ~/.ssh/config) #Default GitHub Host github.com HostName github.com User git IdentityFile ~/.ssh/id_rsa Host github-cit-denis HostName github.com User git IdentityFile ~/.ssh/id_rsa_cit Usar credenciales institucionales Crear repositorio nuevo en github para luego clonarlo en repositorio local y se define el “remote” con el nombre de la credencial que se definión en el archivo de config de ssh. ** git init git commit -am &quot;first commit&#39; git remote add origin [git@](mailto:git@github.com)github-cit-denis:DenisBerroeta/Desnivel_Positivo.git Cambiar usuario de un Repositorio existente Setear el nombre y correo Institucional (link), con los siguientes comandos: git config user.email &quot;*email@example.com*&quot; git config user.name &quot;DenisBerroeta&quot; Setting your commit email address - GitHub Docs git remote set-url origin [git@](mailto:git@github.com)github-cit-denis:DenisBerroeta/Desnivel_Positivo.git 3.1.1 Referencias: Quick Tip: How to Work with GitHub and Multiple Accounts Connecting to GitHub with SSH - GitHub Docs programador clic Multiple GitHub accounts on the same computer? "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
